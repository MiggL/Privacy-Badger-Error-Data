[
  {
    "timestamp": 1582812738464.945,
    "exceptionDetails": {
      "exceptionId": 1,
      "text": "Uncaught",
      "lineNumber": 0,
      "columnNumber": 0,
      "scriptId": "105",
      "url": "https://loadus.exelator.com/load/?p=759&g=20&j=d",
      "exception": {
        "type": "object",
        "subtype": "error",
        "className": "SyntaxError",
        "description": "SyntaxError: Unexpected token '<'",
        "objectId": "{\"injectedScriptId\":3,\"id\":1}",
        "preview": {
          "type": "object",
          "subtype": "error",
          "description": "SyntaxError: Unexpected token '<'",
          "overflow": false,
          "properties": [
            {
              "name": "stack",
              "type": "string",
              "value": "SyntaxError: Unexpected token '<'"
            },
            {
              "name": "message",
              "type": "string",
              "value": "Unexpected token '<'"
            }
          ]
        }
      },
      "executionContextId": 3
    }
  },
  {
    "timestamp": 1582812739549.292,
    "exceptionDetails": {
      "exceptionId": 2,
      "text": "Uncaught",
      "lineNumber": 0,
      "columnNumber": 276550,
      "url": "https://cdn.tinypass.com/api/tinypass.min.js",
      "stackTrace": {
        "callFrames": [
          {
            "functionName": "i.success",
            "scriptId": "123",
            "url": "https://cdn.tinypass.com/api/tinypass.min.js",
            "lineNumber": 0,
            "columnNumber": 276550
          },
          {
            "functionName": "a",
            "scriptId": "123",
            "url": "https://cdn.tinypass.com/api/tinypass.min.js",
            "lineNumber": 0,
            "columnNumber": 70788
          },
          {
            "functionName": "fireWith",
            "scriptId": "123",
            "url": "https://cdn.tinypass.com/api/tinypass.min.js",
            "lineNumber": 0,
            "columnNumber": 71558
          },
          {
            "functionName": "T",
            "scriptId": "123",
            "url": "https://cdn.tinypass.com/api/tinypass.min.js",
            "lineNumber": 0,
            "columnNumber": 115065
          },
          {
            "functionName": "n",
            "scriptId": "123",
            "url": "https://cdn.tinypass.com/api/tinypass.min.js",
            "lineNumber": 0,
            "columnNumber": 121315
          }
        ]
      },
      "exception": {
        "type": "object",
        "subtype": "error",
        "className": "TypeError",
        "description": "TypeError: Cannot read property 'registerTrackUnload' of null\n    at Object.i.success (https://cdn.tinypass.com/api/tinypass.min.js:1:276551)\n    at a (https://cdn.tinypass.com/api/tinypass.min.js:1:70789)\n    at Object.fireWith [as resolveWith] (https://cdn.tinypass.com/api/tinypass.min.js:1:71559)\n    at T (https://cdn.tinypass.com/api/tinypass.min.js:1:115066)\n    at XMLHttpRequest.n (https://cdn.tinypass.com/api/tinypass.min.js:1:121316)",
        "objectId": "{\"injectedScriptId\":3,\"id\":3}",
        "preview": {
          "type": "object",
          "subtype": "error",
          "description": "TypeError: Cannot read property 'registerTrackUnload' of null\n    at Object.i.success (https://cdn.tinypass.com/api/tinypass.min.js:1:276551)\n    at a (https://cdn.tinypass.com/api/tinypass.min.js:1:70789)\n    at Object.fireWith [as resolveWith] (https://cdn.tinypass.com/api/tinypass.min.js:1:71559)\n    at T (https://cdn.tinypass.com/api/tinypass.min.js:1:115066)\n    at XMLHttpRequest.n (https://cdn.tinypass.com/api/tinypass.min.js:1:121316)",
          "overflow": false,
          "properties": [
            {
              "name": "stack",
              "type": "string",
              "value": "TypeError: Cannot read property 'registerTrackUnlo…://cdn.tinypass.com/api/tinypass.min.js:1:121316)"
            },
            {
              "name": "message",
              "type": "string",
              "value": "Cannot read property 'registerTrackUnload' of null"
            }
          ]
        }
      },
      "executionContextId": 3
    }
  },
  {
    "timestamp": 1582812740714.222,
    "exceptionDetails": {
      "exceptionId": 3,
      "text": "Uncaught (in promise)",
      "lineNumber": 23,
      "columnNumber": 305,
      "url": "https://www.independent.co.uk/amp/v0.js",
      "stackTrace": {
        "callFrames": [
          {
            "functionName": "f.assert",
            "scriptId": "19",
            "url": "https://www.independent.co.uk/amp/v0.js",
            "lineNumber": 23,
            "columnNumber": 305
          },
          {
            "functionName": "db",
            "scriptId": "19",
            "url": "https://www.independent.co.uk/amp/v0.js",
            "lineNumber": 26,
            "columnNumber": 54
          },
          {
            "functionName": "f.assertElement",
            "scriptId": "19",
            "url": "https://www.independent.co.uk/amp/v0.js",
            "lineNumber": 24,
            "columnNumber": 30
          },
          {
            "functionName": "",
            "scriptId": "18",
            "url": "https://www.independent.co.uk/amp/v0/amp-analytics-0.1.js",
            "lineNumber": 136,
            "columnNumber": 38
          }
        ]
      },
      "exception": {
        "type": "object",
        "subtype": "error",
        "className": "Error",
        "description": "Error: Element \"[id^='reply-']\" not found: null​​​\n    at Ya.f.assert (https://www.independent.co.uk/amp/v0.js:24:306)\n    at db (https://www.independent.co.uk/amp/v0.js:27:55)\n    at Ya.f.assertElement (https://www.independent.co.uk/amp/v0.js:25:31)\n    at https://www.independent.co.uk/amp/v0/amp-analytics-0.1.js:137:39",
        "objectId": "{\"injectedScriptId\":3,\"id\":16}",
        "preview": {
          "type": "object",
          "subtype": "error",
          "description": "Error: Element \"[id^='reply-']\" not found: null​​​\n    at Ya.f.assert (https://www.independent.co.uk/amp/v0.js:24:306)\n    at db (https://www.independent.co.uk/amp/v0.js:27:55)\n    at Ya.f.assertElement (https://www.independent.co.uk/amp/v0.js:25:31)\n    at https://www.independent.co.uk/amp/v0/amp-analytics-0.1.js:137:39",
          "overflow": true,
          "properties": [
            {
              "name": "fromAssert",
              "type": "boolean",
              "value": "true"
            },
            {
              "name": "associatedElement",
              "type": "undefined",
              "value": "undefined"
            },
            {
              "name": "messageArray",
              "type": "object",
              "value": "Array(2)",
              "subtype": "array"
            },
            {
              "name": "reported",
              "type": "boolean",
              "value": "true"
            },
            {
              "name": "stack",
              "type": "string",
              "value": "Error: Element \"[id^='reply-']\" not found: null​​​…ependent.co.uk/amp/v0/amp-analytics-0.1.js:137:39"
            }
          ]
        }
      },
      "executionContextId": 3
    }
  },
  {
    "timestamp": 1582812740714.4849,
    "exceptionDetails": {
      "exceptionId": 4,
      "text": "Uncaught (in promise)",
      "lineNumber": 23,
      "columnNumber": 305,
      "url": "https://www.independent.co.uk/amp/v0.js",
      "stackTrace": {
        "callFrames": [
          {
            "functionName": "f.assert",
            "scriptId": "19",
            "url": "https://www.independent.co.uk/amp/v0.js",
            "lineNumber": 23,
            "columnNumber": 305
          },
          {
            "functionName": "db",
            "scriptId": "19",
            "url": "https://www.independent.co.uk/amp/v0.js",
            "lineNumber": 26,
            "columnNumber": 54
          },
          {
            "functionName": "f.assertElement",
            "scriptId": "19",
            "url": "https://www.independent.co.uk/amp/v0.js",
            "lineNumber": 24,
            "columnNumber": 30
          },
          {
            "functionName": "",
            "scriptId": "18",
            "url": "https://www.independent.co.uk/amp/v0/amp-analytics-0.1.js",
            "lineNumber": 136,
            "columnNumber": 38
          }
        ]
      },
      "exception": {
        "type": "object",
        "subtype": "error",
        "className": "Error",
        "description": "Error: Element \"[id^='subscription-reply-']\" not found: null​​​\n    at Ya.f.assert (https://www.independent.co.uk/amp/v0.js:24:306)\n    at db (https://www.independent.co.uk/amp/v0.js:27:55)\n    at Ya.f.assertElement (https://www.independent.co.uk/amp/v0.js:25:31)\n    at https://www.independent.co.uk/amp/v0/amp-analytics-0.1.js:137:39",
        "objectId": "{\"injectedScriptId\":3,\"id\":17}",
        "preview": {
          "type": "object",
          "subtype": "error",
          "description": "Error: Element \"[id^='subscription-reply-']\" not found: null​​​\n    at Ya.f.assert (https://www.independent.co.uk/amp/v0.js:24:306)\n    at db (https://www.independent.co.uk/amp/v0.js:27:55)\n    at Ya.f.assertElement (https://www.independent.co.uk/amp/v0.js:25:31)\n    at https://www.independent.co.uk/amp/v0/amp-analytics-0.1.js:137:39",
          "overflow": true,
          "properties": [
            {
              "name": "fromAssert",
              "type": "boolean",
              "value": "true"
            },
            {
              "name": "associatedElement",
              "type": "undefined",
              "value": "undefined"
            },
            {
              "name": "messageArray",
              "type": "object",
              "value": "Array(2)",
              "subtype": "array"
            },
            {
              "name": "reported",
              "type": "boolean",
              "value": "true"
            },
            {
              "name": "stack",
              "type": "string",
              "value": "Error: Element \"[id^='subscription-reply-']\" not f…ependent.co.uk/amp/v0/amp-analytics-0.1.js:137:39"
            }
          ]
        }
      },
      "executionContextId": 3
    }
  },
  {
    "timestamp": 1582812741090.2551,
    "exceptionDetails": {
      "exceptionId": 5,
      "text": "Uncaught (in promise)",
      "lineNumber": 0,
      "columnNumber": 8583,
      "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
      "stackTrace": {
        "callFrames": [
          {
            "functionName": "t.match",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 0,
            "columnNumber": 8583
          },
          {
            "functionName": "",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 1,
            "columnNumber": 110296
          },
          {
            "functionName": "t.retrievePayloadFromPublisherCookie",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 1,
            "columnNumber": 110195
          },
          {
            "functionName": "",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 1,
            "columnNumber": 107246
          },
          {
            "functionName": "t.requestConsentString",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 1,
            "columnNumber": 108071
          },
          {
            "functionName": "t",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 1,
            "columnNumber": 274884
          },
          {
            "functionName": "t.callRAS",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 8,
            "columnNumber": 42504
          },
          {
            "functionName": "",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 8,
            "columnNumber": 70443
          },
          {
            "functionName": "E",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 0,
            "columnNumber": 36260
          },
          {
            "functionName": "t.onReadyState",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 8,
            "columnNumber": 76780
          },
          {
            "functionName": "t.load",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 8,
            "columnNumber": 69607
          },
          {
            "functionName": "t.serve",
            "scriptId": "548",
            "url": "https://a.teads.tv/media/format/v3/teads-format.min.js",
            "lineNumber": 8,
            "columnNumber": 71543
          },
          {
            "functionName": "ttag",
            "scriptId": "409",
            "url": "https://a.teads.tv/page/110377/tag",
            "lineNumber": 19,
            "columnNumber": 39
          }
        ]
      },
      "exception": {
        "type": "undefined"
      },
      "executionContextId": 21
    }
  }
]